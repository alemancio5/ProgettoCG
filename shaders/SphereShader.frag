#version 450layout(location = 0) in vec2 fragUV;layout(set = 0, binding = 1) uniform sampler2D text;layout(binding = 2) uniform GreenLightsDiffusion {	float itemIsGreen;	vec3 greenFactor;} ubo;layout(location = 0) out vec4 outColor;void main() {	// Texture colors	vec3 textColor = texture(text, fragUV).rgb;	float red = textColor.r;	float green = textColor.g;	float blue = textColor.b;	// Invert the colors	vec3 invertedColor = vec3(1.0 - red, 1.0 - green, 1.0 - blue);	// Add a green to the inverted color	vec3 greenTint = invertedColor * vec3(0.6f, 0.9f, 0.6f);	// Blend the green tint with the original color if itemIsGreen is active	vec3 emit = ubo.itemIsGreen == 1.0 ?  greenTint : textColor;	// Ensure we don't exceed the [0.0, 1.0] color range	emit = clamp(emit, 0.0, 1.0);	outColor = vec4(emit, 1.0f);}